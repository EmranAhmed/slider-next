const [
	defaultJSConfig,
	defaultModuleConfig,
] = require( '@wordpress/scripts/config/webpack.config' );
const {
	fromProjectRoot,
	requestToExternal,
	requestToHandle,
	requestToExternalModule,
	getFile,
	getWebPackAlias,
} = require( './bin/webpack-helpers' );
const { sep } = require( 'path' );
const DependencyExtractionWebpackPlugin = require( '@wordpress/dependency-extraction-webpack-plugin' );
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );
const { normalizeJoin, baseDir } = require('./wordpress-develop/tools/webpack/shared')

const scriptConfig = {
	...defaultJSConfig,
	entry: {
		// ...defaultJSConfig.entry(),
		/*'slider': getFile('scripts.js'),
		'user-control': fromProjectRoot('user-control.js'),
		'storepress-utils': {
			import: '@storepress/utils/build/index.js',
			library: {
				name: ['StorePress','Utils'],
				type: 'window',
			},
		}*/
	},

	resolve: {
		...defaultJSConfig.resolve,
		alias: {
			...defaultJSConfig.resolve.alias,
			...getWebPackAlias(),
		},
	},

	plugins: [
		// ...defaultJSConfig.plugins,
		...defaultJSConfig.plugins.filter(
			( plugin ) =>
				plugin.constructor.name !== 'DependencyExtractionWebpackPlugin'
		),
		new DependencyExtractionWebpackPlugin( {
			requestToExternal,
			requestToHandle,
			requestToExternalModule,
		} ),

		// Removes the empty `.js` files generated by webpack but
		// sets it after WP has generated its `*.asset.php` file.
		new RemoveEmptyScriptsPlugin( {
			stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
		} ),
	],
	/*optimization: {
		splitChunks: {
			chunks: 'all',
			minSize: 1,
			name: 'common',
		},
		// runtimeChunk: { name: 'utils' },
	},*/
};

const moduleConfig = {
	...defaultModuleConfig,
	experiments: {
		outputModule: true
	},
	entry: {
		// ...defaultModuleConfig.entry(),
		'slider': getFile('scripts.js'),
		// 'user-control': fromProjectRoot('user-control.js'),
		'storepress-utils-module': {
			import: '@storepress/utils/build-module/index.js',
			library: {
				// name: ['StorePress','Utils'],
				type: 'module',
			},
		}
	},

	resolve: {
		...defaultModuleConfig.resolve,
		alias: {
			...defaultModuleConfig.resolve.alias,
			...getWebPackAlias(),
		},
	},

/*	externals: {
		...defaultModuleConfig.externals,
		'@storepress/utils': '@storepress/utils'
	},*/

	plugins: [
		// ...defaultModuleConfig.plugins,
		...defaultModuleConfig.plugins.filter(
			( plugin ) =>
				plugin.constructor.name !== 'DependencyExtractionWebpackPlugin'
		),
		new DependencyExtractionWebpackPlugin( {
			requestToExternal,
			requestToHandle,
			requestToExternalModule,
		} ),

		// Removes the empty `.js` files generated by webpack but
		// sets it after WP has generated its `*.asset.php` file.
		new RemoveEmptyScriptsPlugin( {
			stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
		} ),
	],
};

module.exports = [ scriptConfig, moduleConfig ];





